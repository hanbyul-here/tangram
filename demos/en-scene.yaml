import:
    - styles/halftone.yaml
    - styles/windows.yaml
    - styles/water.yaml
    - styles/popup.yaml

global:
    language: en # ISO 2-char code
    language_text_source: |
        function() {
            if (feature.name) {
                var names = feature.name.split('(');
                if (global.language == 'kr') return names[0];
                else {
                    // return English name if there is one
                    if (names.length > 1 ) {
                        return names[1].split(')')[0];
                    }
                    else return names[0];
                }
            } else {
                return '';
            }
        }
    showSupermarket: false
    showCafe: false
    showRestaurant: false
    showSchool: false
    showHospital: false
    showLibrary: false
    feature_order: function () { return feature.sort_rank; }

cameras:
    perspective:
        type: perspective
        vanishing_point: [0, -250px] # relative to center of screen, in pixels
        active: true

    isometric:
        type: isometric
        axis: [0, 1]
        active: false

    flat:
        type: flat
        active: false

scene:
    background:
        color: '#f0ebeb'

fonts:
    Montserrat:
        url: https://fonts.gstatic.com/s/montserrat/v7/zhcz-_WihjSQC0oHJ9TCYL3hpw3pgy2gAi-Ip7WPMi0.woff

textures:
    icons:
        url: images/bubble-wrap@2x.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            'US:CA-1char': [350, 694, 82, 90]
            'US:CA-2char': [826, 694, 94, 94]
            'US:CA-3char': [706, 694, 112, 92]
            'US:CA-4char': [574, 694, 124, 92]
            'US:CA-5char': [438, 694, 128, 92]
            'US:I-1char': [686, 790, 90, 100]
            'US:I-2char': [286, 894, 102, 100]
            'US:I-3char': [148, 894, 134, 100]
            'US:I-4char': [0, 894, 140, 100]
            'US:I-5char': [784, 790, 152, 100]
            'US:NY-1char': [560, 602, 72, 88]
            'US:NY-2char': [812, 510, 88, 88]
            'US:NY-3char': [700, 510, 104, 86]
            'US:NY-4char': [576, 510, 116, 88]
            'US:NY-5char': [448, 510, 120, 86]
            'US:PA-1char': [480, 602, 72, 88]
            'US:PA-2char': [384, 602, 88, 88]
            'US:PA-3char': [264, 602, 112, 88]
            'US:PA-4char': [136, 602, 120, 88]
            'US:PA-5char': [0, 602, 128, 88]
            'US:US-1char': [480, 790, 88, 96]
            'US:US-2char': [576, 790, 104, 94]
            'US:US-3char': [336, 790, 136, 100]
            'US:US-4char': [172, 790, 158, 100]
            'US:US-5char': [0, 792, 164, 98]
            airport: [870, 0, 38, 38]
            aerodrome: [870, 0, 38, 38]
            aquarium: [870, 204, 38, 38]
            arrow: [596, 246, 38, 38]
            atm: [46, 204, 38, 38]
            bakery: [686, 204, 38, 38]
            bank: [92, 204, 38, 38]
            category-predicate-money: [92, 204, 38, 38]
            bar: [368, 204, 38, 38]
            pub: [368, 204, 38, 38]
            category-predicate-drink: [368, 204, 38, 38]
            baseball: [506, 84, 38, 38]
            basketball: [460, 84, 38, 38]
            beach: [644, 84, 38, 38]
            bench: [548, 0, 38, 38]
            bicycle: [0, 204, 38, 38]
            bicycle_rental: [0, 204, 38, 38]
            bicycle_rental_station: [0, 204, 38, 38]
            bicycle_parking: [772, 126, 38, 38]
            biergarten: [458, 246, 38, 38]
            brewery: [458, 246, 38, 38]
            books: [954, 126, 38, 38]
            bridge: [920, 84, 38, 38]
            buddhist: [782, 84, 38, 38]
            building: [552, 204, 38, 38]
            hangar: [552, 204, 38, 38]
            nursing_home: [552, 204, 38, 38]
            manor: [552, 204, 38, 38]
            apartments: [552, 204, 38, 38]
            care_home: [552, 204, 38, 38]
            bus_station: [778, 0, 38, 38]
            bus_stop: [778, 0, 38, 38]
            butcher: [920, 42, 38, 38]
            cafe: [640, 204, 38, 38]
            camp_site: [828, 84, 38, 38]
            summer_camp: [828, 84, 38, 38]
            caravan_site: [828, 84, 38, 38]
            capital-l: [772, 246, 32, 32]
            capital-m: [740, 246, 24, 24]
            capital-s: [710, 246, 20, 20]
            capital-xl: [860, 246, 40, 40]
            capital-xs: [688, 246, 16, 16]
            car: [908, 126, 38, 38]
            category-namespace-mobility: [908, 126, 38, 38]
            category-predicate-mobility: [908, 126, 38, 38]
            car_repair: [138, 204, 38, 38]
            car_sharing: [594, 0, 38, 38]
            castle: [414, 42, 38, 38]
            fort: [414, 42, 38, 38]
            cemetery: [736, 84, 38, 38]
            grave_yard: [736, 84, 38, 38]
            christian: [230, 126, 38, 38]
            cinema: [916, 204, 38, 38]
            clothes: [962, 204, 38, 38]
            fashion: [962, 204, 38, 38]
            college: [0, 246, 38, 38]
            university: [0, 246, 38, 38]
            confectionery: [136, 246, 38, 38]
            convenience: [46, 84, 38, 38]
            county_shield-1char: [640, 602, 72, 72]
            county_shield-2char: [256, 694, 88, 72]
            county_shield-3char: [144, 694, 104, 72]
            county_shield-4char: [0, 694, 136, 72]
            county_shield-5char: [720, 602, 160, 72]
            courthouse: [364, 0, 38, 38]
            department_store: [862, 126, 38, 38]
            drinking_water: [412, 246, 38, 38]
            dry_cleaning: [0, 84, 38, 38]
            electronics: [726, 126, 38, 38]
            computer: [726, 126, 38, 38]
            estate_agent: [138, 42, 38, 38]
            factory: [506, 204, 38, 38]
            industrial: [506, 204, 38, 38]
            chimney: [506, 204, 38, 38]
            substation: [506, 204, 38, 38]
            wastewater_plant: [506, 204, 38, 38]
            works: [506, 204, 38, 38]
            water_works: [506, 204, 38, 38]
            plant: [506, 204, 38, 38]
            generator: [506, 204, 38, 38]
            category-predicate-industry: [506, 204, 38, 38]
            fast_food: [320, 246, 38, 38]
            ferry: [824, 0, 38, 38]
            ferry_terminal: [824, 0, 38, 38]
            fire_station: [318, 0, 38, 38]
            fitness: [874, 42, 38, 38]
            fitness_station: [874, 42, 38, 38]
            florist: [184, 126, 38, 38]
            forest: [182, 246, 38, 38]
            natural_forest: [182, 246, 38, 38]
            nature_reserve: [182, 246, 38, 38]
            conservation: [182, 246, 38, 38]
            protected_area: [182, 246, 38, 38]
            grass: [182, 246, 38, 38]
            fountain: [404, 126, 38, 38]
            fuel: [90, 246, 38, 38]
            gallery: [778, 204, 38, 38]
            garden: [690, 84, 38, 38]
            generic: [642, 246, 38, 38]
            category-namespace-other: [642, 246, 38, 38]
            category-predicate-addressing: [642, 246, 38, 38]
            generic_shield-1char: [0, 422, 72, 72]
            generic_shield-2char: [568, 422, 98, 72]
            generic_shield-3char: [428, 422, 132, 72]
            generic_shield-4char: [268, 422, 152, 72]
            generic_shield-5char: [80, 422, 180, 72]
            gift: [138, 126, 38, 38]
            golf_course: [414, 84, 38, 38]
            government: [276, 204, 38, 38]
            townhall: [276, 204, 38, 38]
            public: [276, 204, 38, 38]
            embassy: [276, 204, 38, 38]
            category-predicate-civic: [276, 204, 38, 38]
            hairdresser: [46, 42, 38, 38]
            hardware: [828, 42, 38, 38]
            doityourself: [828, 42, 38, 38]
            painter: [828, 42, 38, 38]
            historical: [92, 126, 38, 38]
            hospital: [184, 0, 38, 38]
            category-namespace-health: [184, 0, 38, 38]
            category-predicate-health: [184, 0, 38, 38]
            hotel: [732, 0, 38, 38]
            motel: [732, 0, 38, 38]
            hostel: [732, 0, 38, 38]
            category-predicate-sleep: [732, 0, 38, 38]
            ice_cream: [504, 246, 38, 38]
            information: [550, 246, 38, 38]
            jewelry: [736, 42, 38, 38]
            jewish: [46, 0, 38, 38]
            landmark: [272, 0, 38, 38]
            memorial: [272, 0, 38, 38]
            monument: [272, 0, 38, 38]
            tower: [272, 0, 38, 38]
            beacon: [272, 0, 38, 38]
            laundry: [690, 42, 38, 38]
            library: [0, 0, 38, 38]
            light_rail: [686, 0, 38, 38]
            tram_stop: [686, 0, 38, 38]
            lighthouse: [276, 84, 38, 38]
            liquor: [634, 126, 38, 38]
            alcohol: [634, 126, 38, 38]
            mall: [644, 42, 38, 38]
            marina: [230, 204, 38, 38]
            dock: [230, 204, 38, 38]
            mineshaft: [782, 42, 38, 38]
            quarry: [782, 42, 38, 38]
            adit: [782, 42, 38, 38]
            mobile_phone: [506, 42, 38, 38]
            museum: [46, 126, 38, 38]
            observatory: [46, 126, 38, 38]
            music: [368, 42, 38, 38]
            muslim: [92, 0, 38, 38]
            newspaper: [322, 42, 38, 38]
            kiosk: [322, 42, 38, 38]
            office: [598, 84, 38, 38]
            insurance: [598, 84, 38, 38]
            company: [598, 84, 38, 38]
            category-predicate-service: [598, 84, 38, 38]
            optician: [276, 42, 38, 38]
            park: [358, 126, 38, 38]
            national_park: [358, 126, 38, 38]
            battlefield: [358, 126, 38, 38]
            protected_area: [358, 126, 38, 38]
            category-predicate-nature: [358, 126, 38, 38]
            park-l: [276, 126, 74, 74]
            parking: [818, 126, 38, 38]
            peak: [230, 84, 38, 38]
            pet: [230, 42, 38, 38]
            pharmacy: [966, 42, 38, 38]
            photographic_laboratory: [184, 42, 38, 38]
            photographer: [184, 42, 38, 38]
            pier: [640, 0, 38, 38]
            place_of_worship: [414, 204, 38, 38]
            chapel: [414, 204, 38, 38]
            wayside_shrine: [414, 204, 38, 38]
            category-predicate-religion: [414, 204, 38, 38]
            playground: [460, 42, 38, 38]
            police: [226, 0, 38, 38]
            post_office: [460, 204, 38, 38]
            recycling: [92, 42, 38, 38]
            restaurant: [228, 246, 38, 38]
            category-namespace-eat_and_drink: [228, 246, 38, 38]
            category-predicate-eat: [228, 246, 38, 38]
            retail: [598, 42, 38, 38]
            store: [598, 42, 38, 38]
            category-namespace-shop_and_service: [598, 42, 38, 38]
            category-predicate-shop: [598, 42, 38, 38]
            ruin: [502, 0, 38, 38]
            ruins: [502, 0, 38, 38]
            archaeological_site: [502, 0, 38, 38]
            school: [552, 84, 38, 38]
            kindergarten: [552, 84, 38, 38]
            category-namespace-education_and_religion: [552, 84, 38, 38]
            category-predicate-education: [552, 84, 38, 38]
            sdk_shield-1char: [672, 422, 84, 84]
            sdk_shield-2char: [328, 510, 112, 84]
            sdk_shield-3char: [176, 510, 144, 84]
            sdk_shield-4char: [0, 510, 168, 84]
            sdk_shield-5char: [764, 422, 192, 84]
            shoemaker: [552, 42, 38, 38]
            ski: [450, 126, 38, 38]
            winter_sports: [450, 126, 38, 38]
            slipway: [138, 84, 38, 38]
            soccer: [368, 84, 38, 38]
            sports: [0, 42, 38, 38]
            sports_centre: [322, 204, 38, 38]
            pitch: [322, 204, 38, 38]
            recreation_ground: [322, 204, 38, 38]
            spring: [322, 84, 38, 38]
            hot_spring: [322, 84, 38, 38]
            stadium: [542, 126, 38, 38]
            subway_entrance: [456, 0, 38, 38]
            supermarket: [680, 126, 38, 38]
            greengrocer: [680, 126, 38, 38]
            swimming_pool: [588, 126, 38, 38]
            tailor: [962, 0, 38, 38]
            taqueria: [274, 246, 38, 38]
            tennis: [496, 126, 38, 38]
            theatre: [732, 204, 38, 38]
            category-predicate-fun: [732, 204, 38, 38]
            theme_park: [0, 126, 38, 38]
            amusement_ride: [0, 126, 38, 38]
            toilets: [874, 84, 38, 38]
            townspot-l: [172, 290, 32, 32]
            townspot-l-rev: [0, 292, 32, 32]
            townspot-m: [140, 290, 24, 24]
            townspot-m-rev: [956, 246, 24, 24]
            townspot-s: [112, 290, 20, 20]
            townspot-s-rev: [928, 246, 20, 20]
            townspot-xl: [212, 290, 40, 40]
            townspot-xl-rev: [40, 292, 40, 40]
            townspot-xs: [88, 290, 16, 16]
            townspot-xs-rev: [908, 246, 12, 12]
            toys: [916, 0, 38, 38]
            traffic_signals: [46, 246, 38, 38]
            train_station: [410, 0, 38, 38]
            station: [410, 0, 38, 38]
            train: [410, 0, 38, 38]
            category-predicate-transport: [410, 0, 38, 38]
            ux-current-location: [554, 290, 88, 88]
            ux-locate-off: [888, 290, 72, 72]
            ux-locate-on: [808, 290, 72, 72]
            ux-route-arrow: [260, 290, 128, 128]
            ux-route-start: [474, 290, 72, 92]
            ux-route-stop: [396, 290, 72, 92]
            ux-search-active: [648, 290, 72, 108]
            ux-search-inactive: [728, 290, 72, 108]
            ux-transit-stop: [812, 248, 42, 36]
            veterinary: [138, 0, 38, 38]
            viewpoint: [824, 204, 38, 38]
            category-namespace-do_and_see: [824, 204, 38, 38]
            category-predicate-attraction: [824, 204, 38, 38]
            vineyard: [184, 204, 38, 38]
            volcano: [92, 84, 38, 38]
            water_park: [184, 84, 38, 38]
            wine: [366, 246, 38, 38]
            winery: [594, 204, 38, 38]
            zoo: [966, 84, 38, 38]

styles:
    buildings:
        base: polygons
        shaders:
            blocks:
                color: |
                    // Modify lighting
                    material.ambient.rgb = vec3(2.);
                    material.diffuse.rgb = vec3(.5);

                    // Shade by building height
                    color.rgb = vec3(min((worldPosition().z*.0005 + .65), .8));

    icons:
        base: points
        texture: icons

    dashed:
        base: lines
        dash: [2, 1]

    transit-lines:
        base: lines
        blend: overlay
        blend_order: -2
        shaders:
            blocks:
                filter: |
                    color.rgb *= 1.25; // pump up the colors
                    color.a = 0.5;     // translucent
        draw: # default draw parameters
            color: function() { return feature.colour || 'gray'; }
            width: 6px
            outline:
                color: [.8, .8, .8]
                width: 1px
            interactive: true

    rainbow:
        base: polygons
        animated: true
        lighting: false
        shaders:
            blocks:
                global: |
                    // hue-saturation-value to RBG color space converter
                    vec3 hsv2rgb(vec3 c) {
                        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
                        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
                        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
                    }
                filter: |
                    // modulate hue by z-position and time, then convert to RGB and set pixel color
                    vec3 c = vec3(worldPosition().z * .003 + u_time / 10., 1.0, 1.0);
                    color.rgb = hsv2rgb(c);

    elevator:
        base: polygons
        animated: true
        shaders:
            blocks:
                position: |
                    // Elevator buildings
                    if (position.z > 0.01) {
                        position.z *= (sin(position.z + u_time) + 1.0);
                    }

    envmap:
        base: polygons
        material:
            ambient: 0
            diffuse: 0
            emission:
                texture: images/sunset.jpg
                mapping: spheremap

sources:
    mapzen:
        type: TopoJSON
        url: https://tile.mapzen.com/mapzen/vector/v1/512/all/{z}/{x}/{y}.topojson
        tile_size: 512
        max_zoom: 16
    amenity:
        type: GeoJSON
        url: data/seoul-amenity.geojson
        generate_label_centroids: true
    shop:
        type: GeoJSON
        url: data/seoul-shop.geojson

layers:
    earth:
        data: { source: mapzen }

        fill:
            filter: { $geometry: polygon }
            enabled: false
            draw:
                polygons:
                    order: global.feature_order
                    color: '#f0ebeb'

        labels:
            filter: { kind: continent, $geometry: point }
            draw:
                text:
                    text_source: global.language_text_source
                    priority: 1
                    font:
                        family: Helvetica
                        size: 12px
                        fill: [0, 0, 0, .8]
                        stroke: { color: white, width: 4 }
                        transform: uppercase


    landuse:
        data: { source: mapzen }
        filter:
            - { $zoom: { min: 16 } }
            - { area: { min: 500px2 } }

        areas:
            draw:
                polygons:
                    order: global.feature_order
                    interactive: true
                    color: honeydew


            parks:
                filter: { kind: [park, graveyard, cemetery, forest, recreation_ground] }
                draw:
                    polygons:
                        color: '#bddec5'
            park-detail:
                filter: { kind: [pitch, wood, natural_wood, grass] }
                draw:
                    polygons:
                        color: '#9dbea5'
            industry:
                filter: { kind: [commercial, industrial] }
                draw:
                    polygons:
                        color: '#C0CDCD'
            civic:
                filter: { kind: university }
                draw:
                    polygons:
                        color: '#D9CFC3'
            urban:
                filter: { kind: urban_area }
                draw:
                    polygons:
                        color: [[7, lightgrey], [9, [.88, .88, .88]]]

    water:
        data: { source: mapzen }
        draw:
            polygons:
                interactive: true
                order: global.feature_order
                color: '#9dc3de'

        # rivers, canals, etc.
        lines:
            filter: { $geometry: line }
            draw:
                text:
                    text_source: global.language_text_source
                    font:
                        fill: '#8db3ce'
                        stroke: { color: white, width: 4px }
                        size: 14px

        oceans:
            filter: { kind: ocean }
            draw:
                text:
                    text_source: global.language_text_source
                    font:
                        family: Baskerville
                        size: 14pt
                        style: italic

        seas:
            filter: { kind: sea, $zoom: { min: 7 } }
            draw:
                text:
                    text_source: global.language_text_source
                    font:
                        family: Baskerville
                        size: 12pt
                        style: italic

    roads:
        data: { source: mapzen }
        filter: { not: { kind: rail } }
        draw:
            lines:
                color: white
                # color: function() { return [Math.random(), Math.random(), Math.random()] }
                width: 12
                order: global.feature_order
                outline:
                    color: [[16, '#999'], [18, '#aaa']]
                    width: [[15, 0], [16, 2]]
                    order: 352 # put all outlines below all roads

        rounded:
            filter: { $zoom: { min: 18 } }
            draw:
                lines:
                    cap: round

        highway:
            filter: { kind: highway }
            draw:
                lines:
                    color: [[5, '#F89595'], [7, '#D16768']]
                    width: [[5, 1px], [8, 1.5px], [14, 2px], [15, 12]]
                    outline:
                        width: [[14, 0], [15, 2]]
            link:
                filter: { is_link: true }
                draw:
                    lines:
                        color: '#aaa'
                        width: [[13, 0], [14, 12]]
        major_road:
            filter: { kind: major_road, $zoom: { min: 10 } }
            draw:
                lines:
                    width: [[10, 0], [13, 2px], [14, 2px], [16, 12]]
                    outline:
                        width: [[16, 0], [17, 1]]
        minor_road:
            filter: { kind: minor_road }
            draw:
                lines:
                    width: [[13, 0px], [14, 1px], [15, 8]]
                    outline:
                        width: [[17, 0], [18, 1]]
        paths:
            filter: { kind: path }
            draw:
                lines:
                    style: dashed
                    color: white
                    width: [[15, 0px], [18, 3px]]
                    outline:
                        width: 0

            # apply outline to roads intersecting parks - see data source transform example in `sources`
            land:
                filter: { intersects_park: true }
                draw:
                    lines:
                        outline:
                            style: lines
                            color: red
                            width: 1px

        ferry:
            filter: { kind: ferry }
            draw:
                lines:
                    style: dashed
                    color: '#8db3ce'
                    width: [[14, 1px], [18, 2px]]
                    outline:
                        width: 0
        airports:
            filter: { kind: aeroway }
            draw:
                lines:
                    color: '#ddd'
                    outline:
                        width: 0

            taxiways:
                filter: { kind_detail: taxiway }
                draw:
                    lines:
                        width: [[13, 0px], [14, 2px], [17, 10px]]

            runways:
                filter: { kind_detail: runway }
                draw:
                    lines:
                        color: [[13, '#FFE4B5'], [16, white]]
                        width: [[11, 3px], [12, 5px], [13, 10px], [15, 75]]
                        cap: square
                        outline:
                            color: orange
                            width: [[11, 0px], [12, 1px], [13, 2px], [15, 12.5]]

        labels:
            filter:
                name: true
                not: { kind: [rail, aeroway] }

            highway:
                filter: { kind: highway }
                draw:
                    text:
                        text_source: global.language_text_source
                        priority: 2
                        font:
                            fill: '#666'
                            family: Helvetica
                            size: 12px
                            stroke: { color: white, width: 4 }

            # major_road:
            #     filter: { kind: major_road, $zoom: { min: 13 } }
            #     draw:
            #         text:
            #             text_source: global.language_text_source
            #             priority: 3
            #             font:
            #                 fill: '#666'
            #                 family: Helvetica
            #                 size: 14px
            #                 stroke: { color: white, width: 4 }

            # minor_road:
            #     filter: { kind: minor_road, $zoom: { min: 15 } }
            #     draw:
            #         text:
            #             text_source: global.language_text_source
            #             priority: 5
            #             font:
            #                 fill: '#666'
            #                 stroke: { color: white, width: 4 }
            #                 family: Helvetica
            #                 size: 12px

            ferry:
                filter: { kind: ferry }
                draw:
                    text:
                        text_source: global.language_text_source
                        text_wrap: 20
                        font:
                            fill: '#8db3ce'
                            stroke: { color: white, width: 4px }
                            style: italic
                            size: 12px

        arrows:
            # oneway arrows and shields are distinct groups!
            filter: { oneway: yes, shield_text: false, $zoom: { min: 17 } }
            draw:
                icons:
                    sprite: arrow
                    size: [[17, 18px], [18, 20px], [20, 32px]]
                    placement: spaced
                    placement_spacing: [[17, 70px], [20, 175px]]
                    angle: auto

        shields:
            filter:
                network: 'US:I' # US interstates only in this demo
                shield_text: true
            draw:
                icons:
                    sprite: shield
                    # sprite: function() { return feature.network }
                    priority: 2
                    color: white
                    size: 24px
                    placement: midpoint
                    repeat_group: shields
                    cull_from_tile: true
                    text:
                        repeat_distance: 150px
                        anchor: center
                        text_source: shield_text
                        font:
                            family: Helvetica
                            size: 11px

            # thin-out shields at low-zoom
            thinning:
                filter: { $zoom: { max: 11 } }
                draw:
                    icons:
                        repeat_distance: 75px

    buildings:
        data: { source: mapzen }
        filter: { $zoom: { min: 14 } }

        # building footprints and extrusions
        polygons:
            filter: { $geometry: polygon }
            draw:
                polygons:
                    order: global.feature_order
                    color: [.83, .83, .83]

            # turn interactive feature selection on for buildings with names
            interactive:
                filter: { name: true }
                draw: { polygons: { interactive: true } }

            # extrude 3d buildings
            extruded:
                filter: { $zoom: { min: 15 } }
                draw:
                    polygons:
                        style: buildings
                        extrude: function () { return feature.height > 20 || $zoom >= 16; }

            # grass rooftops, e.g. NYC Highline
            grass:
                filter: { roof_material: grass }
                draw:
                    polygons:
                        style: polygons # disable building height shader
                        color: '#bddec5'
    amenities:
        data: { source: amenity}
        school:
            visible: global.showSchool
            filter:
                amenity: [school, kindergarten]
                any:
                    - { $zoom: { min: 14 } }
            draw:
                icons:
                    collide: false
                    sprite: school
                    priority: 1
                    size: 16px
                    text:
                        text_source: global.language_text_source
                        font:
                            family: Lucida Grande
                            size: 10pt
                            style: italic
                            fill: darkgreen
                            stroke: { color: white, width: 3 }
        hospital:
            visible: global.showHospital
            filter:
                amenity: [hospital]
                any:
                    - { $zoom: { min: 14 } }
            draw:
                icons:
                    collide: false
                    sprite: hospital
                    priority: 1
                    size: 16px
                    text:
                        text_source: global.language_text_source
                        font:
                            family: Lucida Grande
                            size: 10pt
                            style: italic
                            fill: darkgreen
                            stroke: { color: white, width: 3 }
        library:
            visible: global.showLibrary
            filter:
                amenity: [library]
                any:
                    - { $zoom: { min: 14 } }
            draw:
                icons:
                    collide: false
                    sprite: library
                    priority: 1
                    size: 16px
                    text:
                        text_source: global.language_text_source
                        font:
                            family: Lucida Grande
                            size: 10pt
                            style: italic
                            fill: darkgreen
                            stroke: { color: white, width: 3 }
        cafe:
            visible: global.showCafe
            filter:
                amenity: [coffee, cafe, bakery]
                any:
                    - { $zoom: { min: 14 } }
            draw:
                icons:
                    collide: false
                    sprite: cafe
                    priority: 1
                    size: 16px
                    text:
                        text_source: global.language_text_source
                        font:
                            family: Lucida Grande
                            size: 10pt
                            style: italic
                            fill: darkgreen
                            stroke: { color: white, width: 3 }
        restaurant:
            visible: global.showRestaurant
            filter:
                amenity: [restaurant, fast_food]
                any:
                    - { $zoom: { min: 14 } }
            draw:
                icons:
                    collide: false
                    sprite: restaurant
                    priority: 1
                    size: 16px
                    text:
                        text_source: global.language_text_source
                        font:
                            family: Lucida Grande
                            size: 10pt
                            style: italic
                            fill: darkgreen
                            stroke: { color: white, width: 3 }


    shops:
        data: { source: shop }
        draw:
            icons:
                interactive: true

        supermarkets:
            visible: global.showSupermarket
            filter:
                shop: [supermarket, convenince]
                any:
                    - { $zoom: { min: 14 } }
            draw:
                icons:
                    collide: false
                    sprite: supermarket
                    priority: 2
                    size: 16px
                    text:
                        text_source: global.language_text_source
                        font:
                            family: Lucida Grande
                            size: 10pt
                            style: italic
                            fill: darkgreen
                            stroke: { color: white, width: 3 }

        cafe:
            visible: global.showCafe
            filter:
                shop: [coffee, cafe, bakery]
                any:
                    - { $zoom: { min: 14 } }
            draw:
                icons:
                    collide: false
                    sprite: cafe
                    priority: 1
                    size: 16px
                    text:
                        text_source: global.language_text_source
                        font:
                            family: Lucida Grande
                            size: 10pt
                            style: italic
                            fill: darkgreen
                            stroke: { color: white, width: 3 }

            # add generic icon at high zoom
            generic:
                filter: { $zoom: { min: 14 } }
                draw: { icons: { sprite: info } }

    boundaries:
        data: { source: mapzen}
        filter: { maritime_boundary: false }
        draw:
            lines:
                visible: false
                order: global.feature_order
                width: 2px
                color: wheat

        country:
            filter: { kind: country }
            draw:
                lines:
                    visible: true
                    color: [0.824, 0.651, 0.329, 1.00]

        region:
            filter: { kind: [region, macroregion] }
            draw: { lines: { visible: true } }

        labels:
            filter: { kind: [region, macroregion, country] }
            draw:
                text:
                    interactive: true
                    text_source: global.language_text_source
                    font:
                        family: Montserrat
                        transform: uppercase
                        fill: black

            # dual-sided border labels where available
            dual:
                filter: { 'name:left': true, 'name:right': true }
                draw:
                    text:
                        priority: 1
                        text_source:
                            left: ['name:left:en', 'name:left']
                            right: ['name:right:en', 'name:right']

    places:
        data: { source: mapzen }

        # city labels with points
        city-points:
            filter:
                kind: locality
                kind_detail: city
                $zoom: { max: 11 }
            draw:
                points:
                    size: 8px
                    color: darkred
                    text:
                        text_source: global.language_text_source
                        priority: 1
                        font:
                            family: Helvetica
                            size: 12px
                            fill: [0, 0, 0, .8]
                            stroke: { color: white, width: 4 }
                            transform: uppercase
                            weight: bold
                            size: [[8, 11px], [12, 16px]]
                            buffer: 2px

        # places w/text-only labels (not accompanying point)
        text-only:
            draw:
                text:
                    visible: false
                    text_source: global.language_text_source
                    priority: 1
                    font:
                        family: Helvetica
                        size: 12px
                        fill: [0, 0, 0, .8]
                        stroke: { color: white, width: 4 }
                        transform: uppercase

            countries:
                filter:
                    kind: country
                    any:
                        - { population: { min: 100000000 } }
                        - { $zoom: { min: 5, max: 8 }, population: { min: 1000000 } }
                draw:
                    text:
                        visible: true
                        buffer: 2px
                        font:
                            weight: bold
                            size: [[6, 14px], [8, 20px]]

            regions:
                filter:
                    kind: region
                    kind_detail: [state, province]
                    $zoom: { min: 5, max: 9 }
                draw:
                    text:
                        visible: true
                        buffer: 2px
                        font:
                            # weight: bold
                            size: [[6, 12px], [8, 16px]]

                # use short name when available at low-zooms
                short:
                    filter: { $zoom: { max: 7 } }
                    draw:
                        text:
                            text_source: 'name:short'

            cities:
                filter:
                    kind: locality
                    kind_detail: city
                    $zoom: { min: 11 } # show city point labels below z11
                draw:
                    text:
                        visible: true
                        font:
                            weight: bold
                            size: [[8, 11px], [12, 16px]]
                            buffer: 2px

            neighborhoods:
                filter:
                    - { kind: [neighbourhood, macrohood], $zoom: { min: 13 } }
                    - { kind: microhood, $zoom: { min: 15 } }
                draw:
                    text:
                        visible: true
                        font:
                            size: [[13, 11px], [14, 11px], [15, 13px]]
                            style: italic
                            fill: rgba(136, 45, 23, 0.9)


    transit:
        data: { source: mapzen }
        filter: { $zoom: { min: 16 } }
        draw:
            lines:
                style: transit-lines
                order: 400
